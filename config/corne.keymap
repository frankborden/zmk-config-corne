#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE   0
#define SYM    1
#define NAVNUM 2

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <130>;
    tapping-term-ms = <130>;
};

&lt {
    quick-tap-ms = <130>;
    tapping-term-ms = <130>;
};

/ {
    chosen { zmk,matrix-transform = &five_column_transform; };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp W        &kp L        &kp Y  &kp P      &kp B        &kp Z          &kp F       &kp O       &kp U            &kp SQT         &mt LCMD C       &mt LALT R
&mt LSHFT S  &mt LCTRL T  &kp G  &kp M      &mt LCTRL N  &mt LSHFT E    &mt LALT I  &mt LCMD A  &kp Q            &kp J           &kp V            &kp D
&kp K        &kp X        &kp H  &kp SLASH  &kp COMMA    &kp PERIOD     &kp ESCAPE  &lt 2 TAB   &mt LSHFT SPACE  &mt LCMD ENTER  &lt 1 BACKSPACE  &kp SEMI
            >;
        };

        layer_1 {
            bindings = <
&trans        &kp N7              &kp N8  &kp N9          &trans          &kp LC(LS(TAB))       &kp LG(TAB)     &kp LG(LS(TAB))  &kp LC(TAB)  &trans  &kp LCMD  &mt LALT NUMBER_4
&mt LSHFT N5  &mt LCTRL NUMBER_6  &trans  &kp LEFT_ARROW  &mt LCTRL DOWN  &mt LSHFT UP_ARROW    &mt LALT RIGHT  &kp LCMD         &kp N0       &kp N1  &kp N2    &kp N3
&trans        &trans              &trans  &trans          &trans          &trans                &trans          &trans           &trans       &trans  &trans    &trans
            >;
        };

        layer_2 {
            bindings = <
&trans           &trans          &trans  &trans  &trans                      &trans                         &trans                 &trans                  &trans  &trans  &mt LCMD EQUAL  &mt LALT UNDERSCORE
&mt LSHFT MINUS  &mt LCTRL PLUS  &trans  &trans  &mt LCTRL LEFT_PARENTHESIS  &mt LSHFT RIGHT_PARENTHESIS    &mt LALT LEFT_BRACKET  &mt LCMD RIGHT_BRACKET  &trans  &trans  &trans          &trans
&trans           &trans          &trans  &trans  &trans                      &trans                         &trans                 &trans                  &trans  &trans  &trans          &trans
            >;
        };
    };
};
